"use client"

import React, { useState } from "react";
import { motion } from "framer-motion";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { ArrowRight, Play, Grid, Video, Music, Clock, Star, Users } from "lucide-react";
import Navigation from "@/components/Navigation";
import MouseGlow from "@/components/MouseGlow";
import BackgroundGradient from "@/components/BackgroundGradient";

export default function PortfolioPage() {
  const [selectedFilter, setSelectedFilter] = useState("all");

  const categories = [
    { id: "all", name: "ÂÖ®ÈÉ®‰ΩúÂìÅ", icon: Grid },
    { id: "classical", name: "Âè§ÂÖ∏Ê®Ç", icon: Music },
    { id: "chamber", name: "ÂÆ§ÂÖßÊ®Ç", icon: Users },
    { id: "solo", name: "Áç®Â•èÊúÉ", icon: Star },
    { id: "student", name: "Â≠∏ÁîüÂ∞àÊ°à", icon: "üéì" }
  ];

  const portfolioWorks = [
    {
      id: 1,
      title: "ÈãºÁê¥Áç®Â•èÊúÉÈåÑÂΩ±",
      category: "classical",
      type: "Âè§ÂÖ∏Ê®Ç",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "Èü≥Ê®ÇÂª≥",
      date: "2024.06",
      duration: "90 ÂàÜÈêò",
      image: "/IMG_9106.JPG",
      video: "/percussion.mp4",
      description: "Â∞àÊ•≠ÈãºÁê¥Áç®Â•èÊúÉÈåÑÂΩ±ÔºåÂÆåÊï¥ÊçïÊçâÊºîÂ•èËÄÖÁöÑÁ≤æÊπõÊäÄÂ∑ßËàáÈü≥Ê®ÇË°®Áèæ",
      highlights: ["4K ‰∏âÊ©ü‰ΩçÊãçÊîù", "24ËªåÈåÑÈü≥", "Ëâ≤ÂΩ©Ê†°Ê≠£", "ÂØ¶Ê≥ÅÁõ¥Êí≠"],
      featured: true
    },
    {
      id: 2,
      title: "ÁÆ°Âº¶Ê®ÇÂúòÈü≥Ê®ÇÊúÉÈåÑÂΩ±",
      category: "classical",
      type: "‰∫§ÈüøÊ®Ç",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "Èü≥Ê®ÇÂª≥",
      date: "2024.05",
      duration: "120 ÂàÜÈêò",
      image: "/IMG_9089.JPG",
      video: "/percussion.mp4",
      description: "Â§ßÂûãÁÆ°Âº¶Ê®ÇÂúòÊºîÂá∫ÈåÑÂΩ±ÔºåÂ§öÊ©ü‰ΩçÊãçÊîùÊçïÊçâÊï¥ÂÄãÊ®ÇÂúòÁöÑÂ£ØËßÄÊ∞£Âã¢",
      highlights: ["Â§öÊ©ü‰ΩçÊãçÊîù", "Á©∫ÈñìÈåÑÈü≥", "ÁâπÊÆäÈúÄÊ±ÇËôïÁêÜ"],
      featured: true
    },
    {
      id: 3,
      title: "ÂêàÂî±ÂúòÂÖ¨ÊºîÈåÑÂΩ±",
      category: "classical",
      type: "ÂêàÂî±",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "ËóùÊñá‰∏≠ÂøÉ",
      date: "2024.04",
      duration: "110 ÂàÜÈêò",
      image: "/IMG_9124.JPG",
      video: "/percussion.mp4",
      description: "ÂêàÂî±ÂúòÂÖ¨ÊºîÂÆåÊï¥ÈåÑÂΩ±ÔºåÂ∞àÊ•≠ÁöÑÈü≥ÈüøË®≠ÂÇôÊçïÊçâÊØè‰∏ÄÂÄãÂ£∞ÈÉ®Á¥∞ÁØÄ",
      highlights: ["Á©∫ÈñìÈü≥Èüø", "ÂêàÂî±Êî∂Èü≥", "ÂæåË£ΩÊ∑∑Èü≥"],
      featured: false
    },
    {
      id: 4,
      title: "Â∞èÊèêÁê¥Áç®Â•èÊúÉÈåÑÂΩ±",
      category: "solo",
      type: "Áç®Â•èÊúÉ",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "Èü≥Ê®ÇÂª≥",
      date: "2024.03",
      duration: "80 ÂàÜÈêò",
      image: "/IMG_9076.JPG",
      video: "/percussion.mp4",
      description: "Â∞èÊèêÁê¥Áç®Â•èÊúÉÁöÑÁ≤æÁ∂ªÈåÑÂΩ±ÔºåËøëË∑ùÈõ¢ÊçïÊçâÊºîÂ•èËÄÖÁöÑÊØè‰∏ÄÂÄãÁ¥∞ÁØÄ",
      highlights: ["Ë¶™ÂØÜÈåÑÈü≥", "ËøëË∑ùÈõ¢ÊãçÊîù", "Á¥∞ÁØÄÊçïÊçâ"],
      featured: false
    },
    {
      id: 5,
      title: "ÂÆ§ÂÖßÊ®ÇÊºîÂá∫ÈåÑÂΩ±",
      category: "chamber",
      type: "ÂÆ§ÂÖßÊ®Ç",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "ÊºîÂ•èÂª≥",
      date: "2024.02",
      duration: "100 ÂàÜÈêò",
      image: "/IMG_9102.JPG",
      video: "/percussion.mp4",
      description: "ÂÆ§ÂÖßÊ®ÇÂúòÊºîÂá∫ÁöÑÂÆåÊï¥ÈåÑÂΩ±ÔºåÂ∞àÊ•≠ÁöÑÈü≥ÈüøË®≠ÂÇôÂ±ïÁèæÊúÄ‰Ω≥ÊïàÊûú",
      highlights: ["Â§öÁµÑÈåÑË£Ω", "Âø´ÈÄüËΩâÊèõ", "Áµ±‰∏ÄÂìÅË≥™"],
      featured: false
    },
    {
      id: 6,
      title: "ÁàµÂ£´Ê®ÇÂúòÊºîÂá∫ÈåÑÂΩ±",
      category: "chamber",
      type: "ÁàµÂ£´Ê®Ç",
      artist: "ÂÆ¢Êà∂ÂßîË®ó",
      venue: "ÊºîÂá∫Â†¥Âú∞",
      date: "2024.01",
      duration: "95 ÂàÜÈêò",
      image: "/IMG_9117.JPG",
      video: "/percussion.mp4",
      description: "ÁàµÂ£´Ê®ÇÂúòÁèæÂ†¥ÊºîÂá∫ÈåÑÂΩ±ÔºåÊçïÊçâÁèæÂ†¥ÁöÑÁÜ±ÁÉàÊ∞£Ê∞õËàáÈü≥Ê®ÇÈ≠ÖÂäõ",
      highlights: ["ÁèæÂ†¥Ê∞õÂúç", "ÂãïÊÖãÊî∂Èü≥", "ÁØÄÂ•èÊÑü"],
      featured: false
    }
  ];

  const filteredWorks = selectedFilter === "all" 
    ? portfolioWorks 
    : portfolioWorks.filter(work => work.category === selectedFilter);

  const featuredWorks = portfolioWorks.filter(work => work.featured);

  return (
    <motion.div 
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.8 }}
      className="min-h-screen bg-black text-white overflow-x-hidden"
    >
      <BackgroundGradient />
      <MouseGlow />
      {/* Navigation */}
      <Navigation currentPage="portfolio" />

      <main className="pt-32">
        {/* Hero Section */}
        <section className="relative min-h-[60vh] flex items-center justify-center overflow-hidden">
          <div className="absolute inset-0">
            <div className="absolute inset-0 bg-gradient-to-br from-zinc-900 via-black to-black"></div>
            <div className="absolute top-0 right-1/4 w-96 h-96 bg-amber-600/5 rounded-full blur-3xl"></div>
            <div className="absolute bottom-0 left-1/4 w-96 h-96 bg-purple-600/5 rounded-full blur-3xl"></div>
          </div>

          <div className="relative z-10 text-center px-4 max-w-5xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <span className="inline-block px-6 py-3 bg-gradient-to-r from-zinc-800/50 to-zinc-700/50 backdrop-blur-sm border border-zinc-700/50 rounded-full text-gray-400 text-sm font-light tracking-[0.3em] mb-8">
                PORTFOLIO
              </span>
              
              <h1 className="text-[clamp(3rem,8vw,6rem)] font-thin leading-[1.2] mb-8">
                Á≤æÈÅ∏‰ΩúÂìÅ
                <br />
                <span className="font-extralight italic text-transparent bg-clip-text bg-gradient-to-r from-amber-500 to-orange-500">
                  Èü≥Ê®ÇË®òÊÜ∂
                </span>
              </h1>
              
              <p className="text-xl md:text-2xl font-light text-gray-400 mb-12 max-w-3xl mx-auto leading-[1.2]">
                Ë∂ÖÈÅé 100+ Â†¥Èü≥Ê®ÇÊúÉÈåÑË£ΩÁ∂ìÈ©ó
                <br />
                ÊØè‰∏ÄÂ†¥ÈÉΩÊòØÁç®ÁâπÁöÑËóùË°ìÂâµ‰Ωú
              </p>

              <div className="flex items-center justify-center gap-8 text-sm font-light text-gray-500">
                <span className="flex items-center gap-2">
                  <Video className="h-4 w-4" />
                  100+ Â†¥ÈåÑË£Ω
                </span>
                <span>¬∑</span>
                <span className="flex items-center gap-2">
                  <Users className="h-4 w-4" />
                  50+ Â≠∏Ê†°Âêà‰Ωú
                </span>
                <span>¬∑</span>
                <span className="flex items-center gap-2">
                  <Star className="h-4 w-4" />
                  4.9 ÊªøÊÑèÂ∫¶
                </span>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Featured Works */}
        <section className="py-32 relative">
          <div className="max-w-[90vw] mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              className="text-center mb-20"
            >
              <span className="text-amber-500 text-xs font-light tracking-[0.3em] mb-6 block">
                FEATURED WORKS
              </span>
              <h2 className="text-5xl lg:text-6xl font-thin mb-8 leading-[1.2]">
                Á≤æÈÅ∏È†ÖÁõÆ
              </h2>
            </motion.div>

            <div className="grid lg:grid-cols-2 gap-8">
              {featuredWorks.map((work, i) => (
                <motion.div
                  key={work.id}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: i * 0.1 }}
                  className="group relative cursor-pointer"
                  onClick={() => console.log('Selected work:', work.title)}
                >
                  <div className="relative overflow-hidden rounded-xl">
                    <img 
                      src={work.image}
                      alt={work.title}
                      className="w-full aspect-[16/10] object-cover group-hover:scale-110 transition-transform duration-700"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
                    
                    {/* Play Button */}
                    <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                      <motion.div
                        whileHover={{ scale: 1.1 }}
                        className="w-20 h-20 rounded-full bg-white/90 backdrop-blur-sm flex items-center justify-center shadow-2xl"
                      >
                        <Play className="h-8 w-8 text-black ml-1" />
                      </motion.div>
                    </div>

                    {/* Content */}
                    <div className="absolute bottom-0 left-0 right-0 p-8">
                      <div className="flex items-center gap-3 mb-3">
                        <span className="px-3 py-1 bg-amber-600 text-black rounded-full text-xs font-bold">
                          {work.type}
                        </span>
                        <span className="text-xs text-gray-300">{work.date}</span>
                      </div>
                      <h3 className="text-2xl font-light mb-2 text-white">{work.title}</h3>
                      <p className="text-sm font-light text-gray-300 mb-4">{work.description}</p>
                      
                      <div className="flex flex-wrap gap-2">
                        {work.highlights.slice(0, 3).map((highlight, j) => (
                          <span key={j} className="text-xs text-amber-500/70 bg-amber-500/10 px-2 py-1 rounded">
                            {highlight}
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Filter & Gallery */}
        <section className="py-32 bg-zinc-950 relative">
          <div className="absolute inset-0 bg-gradient-to-b from-black via-zinc-950 to-black"></div>
          
          <div className="relative z-10 max-w-[90vw] mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              className="text-center mb-20"
            >
              <span className="text-amber-500 text-xs font-light tracking-[0.3em] mb-6 block">
                ALL WORKS
              </span>
              <h2 className="text-5xl lg:text-6xl font-thin mb-8 leading-[1.2]">
                ÂÆåÊï¥‰ΩúÂìÅÈõÜ
              </h2>
            </motion.div>

            {/* Filter Tabs */}
            <div className="flex flex-wrap justify-center gap-4 mb-16">
              {categories.map((category) => (
                <motion.button
                  key={category.id}
                  onClick={() => setSelectedFilter(category.id)}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className={`px-6 py-3 rounded-full text-sm font-light tracking-wider transition-all duration-300 ${
                    selectedFilter === category.id
                      ? 'bg-amber-600 text-black'
                      : 'bg-zinc-800/50 border border-zinc-700 text-gray-400 hover:border-amber-600/50 hover:text-amber-500'
                  }`}
                >
                  {typeof category.icon === 'string' ? (
                    <span className="mr-2">{category.icon}</span>
                  ) : (
                    <category.icon className="w-4 h-4 inline mr-2" />
                  )}
                  {category.name}
                </motion.button>
              ))}
            </div>

            {/* Works Grid */}
            <motion.div 
              layout
              className="grid md:grid-cols-2 lg:grid-cols-3 gap-8"
            >
              {filteredWorks.map((work, i) => (
                <motion.div
                  key={work.id}
                  layout
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  exit={{ opacity: 0, scale: 0.9 }}
                  transition={{ duration: 0.5, delay: i * 0.05 }}
                  onClick={() => console.log('Selected work:', work.title)}
                  className="group relative cursor-pointer"
                >
                  <div className="relative overflow-hidden rounded-lg aspect-[4/3]">
                    <img 
                      src={work.image}
                      alt={work.title}
                      className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    
                    {/* Play Button */}
                    <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                      <motion.div
                        whileHover={{ scale: 1.1 }}
                        className="w-14 h-14 rounded-full bg-white/90 backdrop-blur-sm flex items-center justify-center"
                      >
                        <Play className="h-5 w-5 text-black ml-0.5" />
                      </motion.div>
                    </div>

                    {/* Date Badge */}
                    <div className="absolute top-4 right-4 bg-black/50 backdrop-blur-sm px-3 py-1 rounded-full text-xs font-light text-white">
                      {work.date}
                    </div>
                  </div>

                  <div className="p-6">
                    <div className="flex items-center gap-2 mb-3">
                      <span className="text-amber-500 text-xs font-light tracking-[0.2em]">
                        {work.type}
                      </span>
                      <span className="text-gray-600">¬∑</span>
                      <span className="text-xs text-gray-500">{work.venue}</span>
                    </div>
                    <h3 className="text-xl font-light mb-2 text-white group-hover:text-amber-500 transition-colors">
                      {work.title}
                    </h3>
                    <p className="text-sm font-light text-gray-500 mb-4">
                      {work.artist}
                    </p>
                    
                    <div className="flex items-center gap-4 text-xs text-gray-600">
                      <span className="flex items-center gap-1">
                        <Clock className="h-3 w-3" />
                        {work.duration}
                      </span>
                    </div>
                  </div>
                </motion.div>
              ))}
            </motion.div>

            {/* Load More Button */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
              className="text-center mt-16"
            >
              <Button
                variant="outline"
                size="lg"
                className="border-zinc-700 hover:border-amber-500 hover:text-amber-500 px-12 py-4 text-sm font-light tracking-[0.2em] transition-all duration-500"
              >
                ËºâÂÖ•Êõ¥Â§ö‰ΩúÂìÅ
              </Button>
            </motion.div>
          </div>
        </section>

        {/* Stats Section */}
        <section className="py-32 bg-black relative">
          <div className="max-w-[90vw] mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              className="text-center mb-20"
            >
              <span className="text-amber-500 text-xs font-light tracking-[0.3em] mb-6 block">
                ACHIEVEMENTS
              </span>
              <h2 className="text-5xl lg:text-6xl font-thin mb-8 leading-[1.2]">
                ÊàëÂÄëÁöÑÊàêÂ∞±
              </h2>
            </motion.div>

            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {[
                { number: "100+", label: "ÈåÑË£ΩÂ†¥Ê¨°", icon: Video },
                { number: "50+", label: "Âêà‰ΩúÂ≠∏Ê†°", icon: Users },
                { number: "4.9", label: "Âπ≥ÂùáË©ïÂàÜ", icon: Star },
                { number: "72h", label: "ÊúÄÂø´‰∫§‰ªò", icon: Clock }
              ].map((stat, i) => (
                <motion.div
                  key={i}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: i * 0.1 }}
                  className="text-center"
                >
                  <div className="inline-flex p-4 rounded-lg bg-zinc-900/30 border border-zinc-800 mb-6">
                    <stat.icon className="h-8 w-8 text-amber-500" />
                  </div>
                  <div className="text-4xl font-thin text-white mb-2">{stat.number}</div>
                  <div className="text-sm font-light text-gray-500">{stat.label}</div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="relative py-32 overflow-hidden">
          <div className="absolute inset-0">
            <div className="absolute inset-0 bg-gradient-to-br from-amber-900/20 via-black to-black"></div>
          </div>
          
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
            className="relative z-10 max-w-4xl mx-auto text-center px-4"
          >
            <h2 className="text-5xl lg:text-6xl font-thin mb-10 leading-[1.2]">
              ËÆìÊàëÂÄëË®òÈåÑ
              <br />
              <span className="italic font-extralight text-amber-500">‰Ω†ÁöÑÈü≥Ê®ÇÊïÖ‰∫ã</span>
            </h2>
            <p className="text-xl font-light text-gray-400 mb-12 max-w-2xl mx-auto">
              ÊàêÁÇ∫‰∏ã‰∏ÄÂÄãÁ≤æÈÅ∏‰ΩúÂìÅÁöÑ‰∏ªËßí
            </p>
            
            <div className="flex flex-col sm:flex-row gap-6 justify-center">
              <Button
                size="lg"
                className="group bg-amber-600 hover:bg-amber-700 text-black px-12 py-6 text-sm font-light tracking-[0.2em] transition-all duration-500"
                asChild
              >
                <Link href="/contact">
                  Á´ãÂç≥È†êÁ¥ÑÈåÑË£Ω
                  <ArrowRight className="ml-3 h-4 w-4 group-hover:translate-x-2 transition-transform" />
                </Link>
              </Button>
              <Button
                variant="outline"
                size="lg"
                className="border-zinc-700 hover:border-amber-500 hover:text-amber-500 px-12 py-6 text-sm font-light tracking-[0.2em] transition-all duration-500"
                asChild
              >
                <Link href="/pricing">
                  Êü•ÁúãÂÉπÊ†ºÊñπÊ°à
                </Link>
              </Button>
            </div>
          </motion.div>
        </section>
      </main>

      {/* Footer */}
      <footer className="border-t border-zinc-900 bg-black">
        <div className="max-w-[90vw] mx-auto py-12">
          <div className="flex flex-col lg:flex-row justify-between items-center gap-6">
            <div className="flex items-center gap-3">
              <img src="/Owldio.svg" alt="Owldio" className="h-6 w-6 invert" />
              <span className="text-lg font-light tracking-[0.1em]">OWLDIO</span>
              <span className="text-xs font-light text-gray-600">¬© 2024</span>
            </div>
            <div className="flex gap-6">
              <Link href="/" className="text-xs font-light text-gray-600 hover:text-amber-500 transition-colors">
                È¶ñÈ†Å
              </Link>
              <Link href="/student-projects" className="text-xs font-light text-gray-600 hover:text-amber-500 transition-colors">
                Â≠∏ÁîüÂ∞àÊ°à
              </Link>
              <Link href="/services" className="text-xs font-light text-gray-600 hover:text-amber-500 transition-colors">
                ÊúçÂãô
              </Link>
              <Link href="/contact" className="text-xs font-light text-gray-600 hover:text-amber-500 transition-colors">
                ËÅØÁµ°
              </Link>
            </div>
          </div>
        </div>
      </footer>
    </motion.div>
  );
}